name: build-ci

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Java setup
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build
        run: chmod +x gradlew && ./gradlew setupCiWorkspace && ./gradlew build --stacktrace
      - name: Upload build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: build-artifacts
          path: build

      - name: Check for GH_TOKEN and DISCORD_WEBHOOK_URL
        #dont ask
        id: check_secrets
        run: |
          if [[ -z "${{ secrets.GH_TOKEN }}" || -z "${{ secrets.DISCORD_WEBHOOK_URL }}" ]]; then
            echo "Secrets GH_TOKEN or DISCORD_WEBHOOK_URL not provided, skipping tasks"
            echo "::set-output name=result::failure"
          else
            echo "::set-output name=result::success"
          fi

      - name: Fetch latest commit details
        id: latest_commit
        if: steps.check_secrets.outputs.result == 'success'
        run: |
          COMMIT_API_RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GH_TOKEN }}" "https://api.github.com/repos/JellyLabScripts/FarmHelper/commits?per_page=1")
          COMMIT_MESSAGE=$(echo "$COMMIT_API_RESPONSE" | jq -r '.[0].commit.message')
          COMMIT_SHA=$(echo "$COMMIT_API_RESPONSE" | jq -r '.[0].sha')
          COMMIT_URL=$(echo "$COMMIT_API_RESPONSE" | jq -r '.[0].html_url')
          SHORT_COMMIT_SHA=$(echo "$COMMIT_SHA" | cut -c 1-7)
          echo "::set-output name=commit_message::$COMMIT_MESSAGE"
          echo "::set-output name=commit_url::$COMMIT_URL"
          echo "::set-output name=short_commit_sha::$SHORT_COMMIT_SHA"

      - name: Send embed message with timestamp and footer
        if: steps.check_secrets.outputs.result == 'success'
        run: |
          TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)
          LONG_DATE=$(date -u +"%A, %B %-d, %Y at %T")
          COMMIT_MESSAGE="${{ steps.latest_commit.outputs.commit_message }}"
          COMMIT_URL="${{ steps.latest_commit.outputs.commit_url }}"
          SHORT_COMMIT_SHA="${{ steps.latest_commit.outputs.short_commit_sha }}"
          curl -X POST -H "Content-Type: application/json" \
            -d "{
                  \"embeds\": [
                    {
                      \"title\": \"FarmHelper Update\",
                      \"description\": \"FarmHelper has been updated with the following changes:\",
                      \"color\": 3447003,
                      \"thumbnail\": {
                        \"url\": \"https://cdn.discordapp.com/icons/997464259170680923/b8bec7454dd1d7a9ce5e1bb8f6106173.png\"
                      },
                      \"fields\": [
                        {
                          \"name\": \"Latest Commit\",
                          \"value\": \"**${COMMIT_MESSAGE}**\"
                        },
                        {
                          \"name\": \"Commit ID\",
                          \"value\": \"[View Commit (${SHORT_COMMIT_SHA})](${COMMIT_URL})\\n_Click the hyperlink to learn more about the changes._\"
                        }
                      ],
                      \"footer\": {
                        \"text\": \"Updated: ${LONG_DATE}\"
                      }
                    }
                  ]
                }" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Send build artifacts to Discord webhook
        if: steps.check_secrets.outputs.result == 'success'
        run: |
          cd build
          for file in *.jar; do
            curl -X POST -H "Content-Type: multipart/form-data" \
              -F "file=@$file" \
              ${{ secrets.DISCORD_WEBHOOK_URL }}
          done
